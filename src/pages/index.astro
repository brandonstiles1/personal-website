---
// Configuration Variables
const config = {
	site: {
		name: "Brandon Stiles",
	nav: ["Work", "Story", "Demos", "Presentations", "Connect"],
		cta: { label: "Let's Connect", href: "#connect" },
	},
	hero: {
		headline: [
			"Engineer who turns complexity into clarity",
		],
		subline: "Customer‚Äëfacing engineer ‚Ä¢ Technical Storytelling",
	},
	work: {
		intro: "My latest work",
		since: "from 2020 'til today",
		projects: [
			{
				title: "Authentication Redesign",
				tags: [
					"AWS Cognito",
					"Lambda",
					"PostgreSQL",
					"React",
					"TypeScript",
					"SQS",
				],
			description:
				"Designed and built a full passwordless authentication system‚Äîincluding magic links and OTP‚Äîusing AWS Cognito, Lambda, and PostgreSQL, delivering secure, seamless login for 500k+ patients.",
				company: "Talkiatry",
				companyLogo: "talkiatry.png",
				icon: "üîê",
				gradientFrom: "#1e40af",
				gradientTo: "#06b6d4",
			},
			{
				title: "Patient‚ÄìProvider Messaging Platform",
				tags: [
					"AWS Lambda",
					"SQS",
					"EHR APIs",
					"React",
					"Node.js",
					"PostgreSQL",
				],
			description:
				"Enabled HIPAA‚Äëcompliant patient‚Äìclinician messaging; led discovery with PM/Informatics, demoed workflows, and shipped with Lambdas + queues.",
				company: "Talkiatry",
				companyLogo: "talkiatry.png",
				icon: "üí¨",
				gradientFrom: "#1e40af",
				gradientTo: "#06b6d4",
			},
			{
				title: "All Results Drill Down",
				tags: [
					"MongoDB",
					"Node.js",
					"React",
					"Express",
					"Aggregation Pipeline",
					"Chart.js",
				],
			description:
				"Gave admins actionable audit visibility via drill‚Äëdowns and charts; presented schema tradeoffs to align Eng, Product, and Compliance.",
				company: "FloQast",
				companyLogo: "floqast.png",
				icon: "üîç",
				gradientFrom: "#1e3a8a",
				gradientTo: "#0891b2",
			},
			{
				title: "Partner Enablement System",
				tags: [
					"Node.js",
					"MongoDB",
					"Segment",
					"Datadog",
					"Docker",
					"Kubernetes",
				],
			description:
				"Improved partner onboarding and analytics with Segment + Datadog; collaborated with Sales/Marketing to surface metrics and reduce time‚Äëto‚Äëvalue.",
				company: "Greenlight",
				companyLogo: "greenlight.png",
				icon: "üìä",
				gradientFrom: "#166534",
				gradientTo: "#0d9488",
			},
		],
	},
	story: {
		title: "About Me",
		bio: "I'm a software engineer who thrives at the intersection of technology and communication. With 6 years of experience building scalable backend systems at healthtech and fintech startups, I've led engineering initiatives that launched high-impact features used by millions.",
		bio2: "What sets me apart is my ability to present live demos to stakeholders, translate complex technical concepts for cross-functional teams, and drive alignment that accelerates product adoption. I love roles that blend technical expertise with business impact.",
        bio3: "I thrive in customer conversations‚Äîdiscovery, demos, and proofs‚Äëof‚Äëconcept that build understanding and trust‚Äîwhile staying hands‚Äëon with engineering.",
		personalNote:
			"When I'm not coding or demoing, you'll find me in Atlanta with my partner Savannah, exploring new places, new restaurants, and probably debating the best way to optimize something completely unnecessary.",
	},
youtube: {
    title: "Demos & Walkthroughs",
    subtitle:
        "System walkthroughs, integrations, and product demos",
		videos: [
			{
				id: "KLonYvIaWug",
				title: "Product Demo Walkthrough",
				description:
					"Technical presentation showcasing system architecture",
			},
			{
				id: "uDqDZjVOccc",
				title: "Marketing Strategy Tutorial",
				description: "Business development and growth tactics",
			},
			{
				id: "dahxln73XCg",
				title: "Sales Insights",
				description: "Getting to yes in a sales cycle",
			},
			{
				id: "aDIM97C0QOI",
				title: "Path Sum 2",
				description: "A walkthrough of the famous Path Sum 2 problem",
			},
		],
	},
	slideshows: {
		title: "Presentation Gallery",
		subtitle: "Deep-dive technical presentations and case studies",
		presentations: [
			{
				filename: "redis_presentation.pdf",
				title: "Redis: The Key to Delivering Value",
				description: "Technical deep-dive into scalable backend design",
				thumbnail: "redis_presentation.png",
			},
			{
				filename: "redis_presentation.pdf",
				title: "Data Modeling in MongoDB",
				description:
					"Best practices for modeling your MongoDB collections",
				thumbnail: "mongodb_data_modeling.png",
			},
		],
	},
	contact: {
		email: "brandonstiles@gmail.com",
		social: [
			{
				platform: "linkedin",
				url: "https://www.linkedin.com/in/brandon-stiles-dev/",
			},
			{ platform: "youtube", url: "https://youtube.com/@brandonstiles" },
			{ platform: "github", url: "https://github.com/brandonstiles1" },
		],
	},
};
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link
			rel="apple-touch-icon"
			sizes="180x180"
			href="/apple-touch-icon.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="32x32"
			href="/favicon-32x32.png"
		/>
		<link
			rel="icon"
			type="image/png"
			sizes="16x16"
			href="/favicon-16x16.png"
		/>
		<link rel="manifest" href="/site.webmanifest" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
		<meta
			name="description"
			content="Engineer helping teams turn complex systems into clear demos and customer outcomes across Healthtech & Fintech."
		/>
		<title>Brandon Stiles ‚Äî Engineer & Product Demo Specialist</title>
		<link
			href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&family=Caveat:wght@400;600;700&display=swap"
			rel="stylesheet"
		/>
		<link
			rel="stylesheet"
			href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
		/>
	</head>
	<body>
		<!-- Header -->
		<header class="header">
			<div class="header-container">
				<div class="logo">
					<span class="logo-text">{config.site.name}</span>
				</div>
				<nav class="nav">
					{
						config.site.nav.map((item) => (
							<a href={`#${item.toLowerCase()}`} class="nav-link">
								{item}
							</a>
						))
					}
				</nav>
				<div class="cta-button-container">
					<a href={config.site.cta.href} class="cta-button"
						>{config.site.cta.label}</a
					>
				</div>
			</div>
		</header>

		<!-- Hero Section -->
		<section class="hero">
			<div class="hero-container">
				<div class="hero-content">
					<div class="hero-profile">
						<div class="profile-flip-container">
							<div class="profile-flip-inner">
								<div class="profile-front">
									<img
										src="Brandon.jpg"
										alt="Brandon Stiles"
										class="profile-pic"
									/>
								</div>
								<div class="profile-back">
									<div class="initials">brs</div>
								</div>
							</div>
						</div>
					</div>
					<h1 class="hero-title hero-parallax">
						{
							config.hero.headline.map((line, index) => (
								<span
									class="hero-line"
									data-delay={index * 100}
								>
									{line}
								</span>
							))
						}
					</h1>
					<p class="hero-subline">{config.hero.subline}</p>
					<div class="hero-cta">
						<a href="#work" class="scroll-cue">View My Work</a>
					</div>
				</div>
				<div class="hero-bg">
					<div class="floating-shapes">
						<div class="shape shape-1"></div>
						<div class="shape shape-2"></div>
						<div class="shape shape-3"></div>
					</div>
				</div>
			</div>
		</section>

		<!-- Work Section -->
		<section id="work" class="work">
			<div class="container">
				<div class="section-header">
					<h2 class="section-title">{config.work.intro}</h2>
					<p class="section-subtitle">{config.work.since}</p>
				</div>
				<div class="work-grid">
					{
						config.work.projects.map((project, index) => (
							<article class="work-card" data-delay={index * 150}>
								<div class="work-card-inner">
									<div
										class="work-visual"
										style={`background: linear-gradient(135deg, ${project.gradientFrom}, ${project.gradientTo})`}
									>
										<div class="company-logo">
											<img
												src={project.companyLogo}
												alt={project.company}
											/>
										</div>
										<div class="project-icon">
											<span>{project.icon}</span>
										</div>
									</div>
									<div class="work-content">
										<h3 class="work-title">
											{project.title}
										</h3>
										<p class="work-company">
											{project.company}
										</p>
										<p class="work-description">
											{project.description}
										</p>
										<div class="work-tags">
											{project.tags.map((tag) => (
												<span class="work-tag">
													{tag}
												</span>
											))}
										</div>
									</div>
								</div>
							</article>
						))
					}
				</div>
			</div>
		</section>

		<!-- Story Section -->
		<section id="story" class="story">
			<div class="container">
				<div class="story-layout">
					<h2 class="story-title">{config.story.title}</h2>
					<div class="story-text">
						<p class="story-paragraph">{config.story.bio}</p>
						<p class="story-paragraph">{config.story.bio2}</p>
						<p class="story-paragraph">{config.story.bio3}</p>
						<p class="story-personal">
							{config.story.personalNote}
						</p>
					</div>
					<div class="story-photo">
						<div class="polaroid">
							<div class="polaroid-image">
								<img
									src="brandon-savannah.jpg"
									alt="Brandon and Savannah"
									class="couple-photo"
								/>
							</div>
							<div class="polaroid-caption">
								<span>Brandon & Savannah ‚ú®</span>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>

    <!-- Demos & Walkthroughs Section -->
    <section id="demos" class="youtube-showcase">
			<div class="container">
				<div class="section-header">
					<h2 class="section-title">{config.youtube.title}</h2>
					<p class="section-subtitle">{config.youtube.subtitle}</p>
				</div>
				<div class="youtube-grid">
					{
						config.youtube.videos.map((video, index) => (
							<div class="youtube-card" data-delay={index * 150}>
								<div class="youtube-embed">
									<iframe
										src={`https://www.youtube.com/embed/${video.id}?rel=0&modestbranding=1&showinfo=0`}
										title={video.title}
										frameborder="0"
										allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
										allowfullscreen
									/>
								</div>
								<div class="youtube-content">
									<h3 class="youtube-title">{video.title}</h3>
									<p class="youtube-description">
										{video.description}
									</p>
									<div class="youtube-overlay">
										<div class="play-button">
											<i class="fas fa-play" />
										</div>
									</div>
								</div>
							</div>
						))
					}
				</div>
			</div>
		</section>

		<!-- Slideshow Presentations Section -->
		<section id="presentations" class="slideshows">
			<div class="container">
				<div class="section-header">
					<h2 class="section-title">{config.slideshows.title}</h2>
					<p class="section-subtitle">{config.slideshows.subtitle}</p>
				</div>
				<div class="slideshow-gallery">
					{
						config.slideshows.presentations.map(
							(slideshow, index) => (
								<div
									class="slideshow-item"
									data-delay={index * 150}
								>
									<div class="slideshow-preview">
										{slideshow.thumbnail ? (
											<img
												src={slideshow.thumbnail}
												alt={slideshow.title}
												class="slideshow-thumbnail"
											/>
										) : (
											<div class="slideshow-placeholder">
												<i class="fas fa-file-pdf" />
												<span>PDF Presentation</span>
											</div>
										)}
										<div class="slideshow-overlay">
											<a
												href={slideshow.filename}
												target="_blank"
												class="slideshow-view-btn"
											>
												<i class="fas fa-external-link-alt" />
												View Presentation
											</a>
										</div>
									</div>
									<div class="slideshow-info">
										<h3 class="slideshow-title">
											{slideshow.title}
										</h3>
										<p class="slideshow-description">
											{slideshow.description}
										</p>
									</div>
								</div>
							),
						)
					}
				</div>
			</div>
		</section>

		<!-- Contact Section -->
		<section id="connect" class="contact">
			<div class="container">
				<div class="big-connect-button-wrapper">
					<div class="cta-button-container big-button">
						<a
							href={`mailto:${config.contact.email}`}
							class="cta-button big-cta"
						>
							<span class="button-text">Let's Connect!</span>
							<span class="button-icon">üöÄ</span>
						</a>
					</div>
				</div>
				<div class="contact-social">
					{
						config.contact.social.map((social) => (
							<a
								href={social.url}
								target="_blank"
								class="social-link"
							>
								<i class={`fab fa-${social.platform}`} />
							</a>
						))
					}
				</div>
			</div>
		</section>
	</body>

	<style>
		:root {
			--bg: #0b1220;
			--fg: #f7f8fb;
			--muted: #9aa4b2;
			--brand: #3b82f6;
			--accent: #06b6d4;
			--card-bg: #1e293b;
			--border: #334155;
			--radius-xl: 1.25rem;
			--shadow-md: 0 10px 30px rgba(0, 0, 0, 0.15);
			--shadow-lg: 0 25px 50px rgba(0, 0, 0, 0.25);
		}

		* {
			margin: 0;
			padding: 0;
			box-sizing: border-box;
		}

		html {
			scroll-behavior: smooth;
		}

		body {
			font-family: "Inter", sans-serif;
			background: var(--bg);
			color: var(--fg);
			line-height: 1.6;
			overflow-x: hidden;
		}

		.container {
			max-width: 1200px;
			margin: 0 auto;
			padding: 0 2rem;
		}

		/* Header */
		.header {
			position: fixed;
			top: 0;
			width: 100%;
			z-index: 1000;
			background: rgba(11, 18, 32, 0.8);
			backdrop-filter: blur(20px);
			border-bottom: 1px solid var(--border);
			transition: all 0.3s ease;
		}

		.header-container {
			display: flex;
			align-items: center;
			justify-content: space-between;
			padding: 1rem 2rem;
			max-width: 1200px;
			margin: 0 auto;
		}

		.logo-text {
			font-size: 1.5rem;
			font-weight: 800;
			color: var(--fg);
		}

		.nav {
			display: flex;
			gap: 2rem;
		}

		.nav-link {
			color: var(--muted);
			text-decoration: none;
			font-weight: 500;
			transition: color 0.3s ease;
		}

		.nav-link:hover {
			color: var(--fg);
		}

		.cta-button {
			background: linear-gradient(145deg, var(--brand), #2563eb);
			color: var(--fg);
			padding: 1rem 2rem;
			border-radius: 1rem;
			text-decoration: none;
			font-weight: 700;
			font-size: 1.1rem;
			position: relative;
			border: none;
			cursor: pointer;
			transform: translateY(0);
			box-shadow:
				0 8px 15px rgba(59, 130, 246, 0.3),
				0 0 0 1px rgba(255, 255, 255, 0.1) inset,
				0 2px 4px rgba(255, 255, 255, 0.2) inset;
			transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
			overflow: hidden;
		}

		.cta-button::before {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background: linear-gradient(
				145deg,
				rgba(255, 255, 255, 0.1),
				transparent
			);
			border-radius: 1rem;
			opacity: 0;
			transition: opacity 0.3s ease;
		}

		.cta-button::after {
			content: "";
			position: absolute;
			top: 50%;
			left: 50%;
			width: 0;
			height: 0;
			background: radial-gradient(
				circle,
				rgba(255, 255, 255, 0.3) 0%,
				transparent 70%
			);
			border-radius: 50%;
			transform: translate(-50%, -50%);
			transition: all 0.6s ease;
		}

		.cta-button:hover {
			transform: translateY(-4px);
			box-shadow:
				0 15px 30px rgba(59, 130, 246, 0.4),
				0 0 0 1px rgba(255, 255, 255, 0.15) inset,
				0 3px 6px rgba(255, 255, 255, 0.25) inset;
			background: linear-gradient(145deg, var(--accent), #0ea5e9);
		}

		.cta-button:hover::before {
			opacity: 1;
		}

		.cta-button:hover::after {
			width: 100px;
			height: 100px;
		}

		.cta-button:active {
			transform: translateY(-1px);
			box-shadow:
				0 5px 10px rgba(59, 130, 246, 0.3),
				0 0 0 1px rgba(255, 255, 255, 0.1) inset,
				0 1px 3px rgba(0, 0, 0, 0.2) inset;
			background: linear-gradient(145deg, #1d4ed8, var(--brand));
		}

		/* Hover sparkle animations */
		.cta-button-container {
			position: relative;
			display: inline-block;
		}

		.sparkle {
			position: absolute;
			width: 4px;
			height: 4px;
			background: var(--accent);
			border-radius: 50%;
			opacity: 0;
			pointer-events: none;
		}

		.sparkle.animate {
			animation: sparkleFloat 1.5s ease-out forwards;
		}

		@keyframes sparkleFloat {
			0% {
				opacity: 0;
				transform: translateY(0) scale(0);
			}
			10% {
				opacity: 1;
				transform: translateY(-5px) scale(1);
			}
			100% {
				opacity: 0;
				transform: translateY(-30px) scale(0.5);
			}
		}

		/* Pulse ring animation */
		.cta-button-container::before {
			content: "";
			position: absolute;
			top: 50%;
			left: 50%;
			width: 100%;
			height: 100%;
			border: 2px solid var(--brand);
			border-radius: 1rem;
			opacity: 0;
			transform: translate(-50%, -50%) scale(1);
			transition: all 0.3s ease;
			pointer-events: none;
		}

		.cta-button-container:hover::before {
			opacity: 0.3;
			transform: translate(-50%, -50%) scale(1.2);
			animation: pulseRing 2s ease-out infinite;
		}

		@keyframes pulseRing {
			0% {
				transform: translate(-50%, -50%) scale(1.2);
				opacity: 0.3;
			}
			50% {
				transform: translate(-50%, -50%) scale(1.4);
				opacity: 0.1;
			}
			100% {
				transform: translate(-50%, -50%) scale(1.2);
				opacity: 0.3;
			}
		}

		/* Hero */
		.hero {
			min-height: 100vh;
			display: flex;
			align-items: center;
			position: relative;
			overflow: hidden;
			padding-top: 100px; /* Add padding to account for fixed navbar */
		}

		.hero-parallax {
			position: relative;
			will-change: transform;
			transition: transform 0.1s linear;
		}

		.hero-container {
			width: 100%;
			max-width: 1200px;
			margin: 0 auto;
			padding: 0 2rem;
			position: relative;
			z-index: 2;
		}

		.hero-profile {
			position: absolute;
			top: 0;
			right: 2rem;
			z-index: 1;
			opacity: 0;
			/* Remove floating animation; keep simple fade-in */
			animation: fadeIn 0.8s ease 0.2s forwards;
		}

		/* Profile flip container */
		.profile-flip-container {
			width: 120px;
			height: 120px;
			perspective: 1000px;
			cursor: pointer;
			/* Remove subtle floating on the image */
			animation: none;
		}

		.profile-flip-inner {
			position: relative;
			width: 100%;
			height: 100%;
			transition: transform 0.8s;
			transform-style: preserve-3d;
		}

		.profile-flip-container:hover .profile-flip-inner {
			transform: rotateY(180deg);
			/* Stop hover bounce; keep the flip only */
			animation: none;
		}

		.profile-front,
		.profile-back {
			position: absolute;
			width: 100%;
			height: 100%;
			backface-visibility: hidden;
			border-radius: 50%;
			border: 3px solid rgba(255, 255, 255, 0.2);
			box-shadow:
				0 8px 32px rgba(0, 0, 0, 0.3),
				0 0 0 1px rgba(255, 255, 255, 0.1) inset;
			transition: all 0.3s ease;
		}

		.profile-front {
			background: var(--card-bg);
		}

		.profile-back {
			transform: rotateY(180deg);
			background: linear-gradient(135deg, var(--brand), var(--accent));
			display: flex;
			align-items: center;
			justify-content: center;
		}

		.profile-pic {
			width: 100%;
			height: 100%;
			border-radius: 50%;
			object-fit: cover;
			border: none;
		}

		.initials {
			font-family: var(--font-heading);
			font-size: 2rem;
			font-weight: 900;
			color: var(--fg);
			text-transform: uppercase;
			letter-spacing: 0.1em;
			text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
		}

		/* Enhanced hover effects */
		.profile-flip-container:hover .profile-front,
		.profile-flip-container:hover .profile-back {
			border-color: var(--brand);
			box-shadow:
				0 20px 50px rgba(0, 0, 0, 0.4),
				0 0 30px rgba(59, 130, 246, 0.4),
				0 0 0 1px rgba(255, 255, 255, 0.2) inset;
		}

		.hero-title {
			font-size: clamp(3rem, 8vw, 8rem);
			font-weight: 900;
			line-height: 0.9;
			margin-bottom: 2rem;
			display: flex;
			flex-direction: column;
			position: relative;
			z-index: 10;
		}

		/* Hero section floating around animation */
		@keyframes heroFloat {
			0% {
				transform: translate(0, 0) rotate(0deg);
			}
			12.5% {
				transform: translate(-150px, 50px) rotate(15deg);
			}
			25% {
				transform: translate(-300px, -20px) rotate(-10deg);
			}
			37.5% {
				transform: translate(-250px, 80px) rotate(20deg);
			}
			50% {
				transform: translate(-100px, 120px) rotate(-5deg);
			}
			62.5% {
				transform: translate(50px, 100px) rotate(25deg);
			}
			75% {
				transform: translate(100px, 30px) rotate(-15deg);
			}
			87.5% {
				transform: translate(50px, -30px) rotate(10deg);
			}
			100% {
				transform: translate(0, 0) rotate(0deg);
			}
		}

		/* Small bubble floating animation (local) */
		@keyframes bubbleFloat {
			0%,
			100% {
				transform: translateY(0) translateX(0) rotate(0deg);
			}
			25% {
				transform: translateY(-8px) translateX(5px) rotate(1deg);
			}
			50% {
				transform: translateY(-3px) translateX(-3px) rotate(-0.5deg);
			}
			75% {
				transform: translateY(-10px) translateX(2px) rotate(0.5deg);
			}
		}

		/* Hover bounce animation */
		@keyframes bubbleBounce {
			0%,
			100% {
				transform: scale(1.1) translateY(0);
			}
			50% {
				transform: scale(1.15) translateY(-5px);
			}
		}

		/* Add bubble decorations around the profile pic */
		.hero-profile::before,
		.hero-profile::after {
			content: "";
			position: absolute;
			border-radius: 50%;
			pointer-events: none;
			opacity: 0;
			transition: opacity 0.4s ease;
		}

		/* Small bubbles */
		.hero-profile::before {
			width: 20px;
			height: 20px;
			background: rgba(59, 130, 246, 0.3);
			top: 20%;
			left: -10%;
			animation: smallBubble 3s ease-in-out infinite;
			animation-delay: 0.5s;
		}

		.hero-profile::after {
			width: 15px;
			height: 15px;
			background: rgba(6, 182, 212, 0.4);
			bottom: 25%;
			right: -5%;
			animation: smallBubble 2.5s ease-in-out infinite;
			animation-delay: 1s;
		}

		.hero-profile:hover::before,
		.hero-profile:hover::after {
			opacity: 1;
		}

		@keyframes smallBubble {
			0%,
			100% {
				transform: translateY(0) scale(1);
				opacity: 0.6;
			}
			50% {
				transform: translateY(-15px) scale(1.2);
				opacity: 0.8;
			}
		}

		/* Add floating sparkles */
		.hero-profile:hover .profile-flip-container::after {
			content: "‚ú® ‚ú® ‚ú®";
			position: absolute;
			top: -25px;
			left: 50%;
			transform: translateX(-50%);
			font-size: 1rem;
			animation: floatingSparkles 2s ease-in-out infinite;
			white-space: nowrap;
			pointer-events: none;
		}

		@keyframes floatingSparkles {
			0%,
			100% {
				transform: translateX(-50%) translateY(0) scale(1);
				opacity: 0.8;
			}
			50% {
				transform: translateX(-50%) translateY(-8px) scale(1.1);
				opacity: 1;
			}
		}

		.hero-line {
			opacity: 0;
			transform: translateY(50px);
			animation: slideUp 1s ease forwards;
		}

		.hero-line:nth-child(1) {
			animation-delay: 0.1s;
		}
		.hero-line:nth-child(2) {
			animation-delay: 0.3s;
		}
		.hero-line:nth-child(3) {
			animation-delay: 0.5s;
		}

		@keyframes slideUp {
			to {
				opacity: 1;
				transform: translateY(0);
			}
		}

		.hero-subline {
			font-size: 1.5rem;
			color: var(--muted);
			margin-bottom: 3rem;
			opacity: 0;
			animation: fadeIn 1s ease 0.8s forwards;
			position: relative;
			z-index: 10;
		}

		@keyframes fadeIn {
			to {
				opacity: 1;
			}
		}

		.scroll-cue {
			display: inline-flex;
			align-items: center;
			gap: 0.5rem;
			color: var(--brand);
			text-decoration: none;
			font-weight: 600;
			opacity: 0;
			animation: fadeIn 1s ease 1.2s forwards;
			transition: transform 0.3s ease;
			position: relative;
			z-index: 10;
		}

		.scroll-cue:hover {
			transform: translateY(-2px);
		}

		/* Floating Shapes */
		.hero-bg {
			position: absolute;
			inset: 0;
			pointer-events: none;
		}

		.floating-shapes {
			position: absolute;
			inset: 0;
		}

		.shape {
			position: absolute;
			background: linear-gradient(45deg, var(--brand), var(--accent));
			border-radius: 50%;
			opacity: 0.1;
			animation: float 6s ease-in-out infinite;
		}

		.shape-1 {
			width: 200px;
			height: 200px;
			top: 20%;
			right: 10%;
			animation-delay: 0s;
		}

		.shape-2 {
			width: 150px;
			height: 150px;
			bottom: 30%;
			left: 5%;
			animation-delay: 2s;
		}

		.shape-3 {
			width: 100px;
			height: 100px;
			top: 60%;
			right: 30%;
			animation-delay: 4s;
		}

		@keyframes float {
			0%,
			100% {
				transform: translateY(0px) rotate(0deg);
			}
			50% {
				transform: translateY(-20px) rotate(180deg);
			}
		}

		/* Work Section */
		.work {
			padding: 8rem 0;
			background: linear-gradient(180deg, var(--bg) 0%, #1a202c 100%);
		}

		.section-header {
			text-align: center;
			margin-bottom: 4rem;
		}

		.section-title {
			font-size: clamp(2.5rem, 5vw, 4rem);
			font-weight: 800;
			margin-bottom: 1rem;
		}

		.section-subtitle {
			font-size: 1.25rem;
			color: var(--muted);
		}

		.work-grid {
			display: grid;
			grid-template-columns: repeat(2, 1fr);
			gap: 2rem;
			margin-bottom: 3rem;
		}

		.work-card {
			opacity: 0;
			transform: translateY(50px);
			animation: cardSlide 0.8s ease forwards;
		}

		.work-card:nth-child(1) {
			animation-delay: 0.1s;
		}
		.work-card:nth-child(2) {
			animation-delay: 0.3s;
		}
		.work-card:nth-child(3) {
			animation-delay: 0.5s;
		}
		.work-card:nth-child(4) {
			animation-delay: 0.7s;
		}

		@keyframes cardSlide {
			to {
				opacity: 1;
				transform: translateY(0);
			}
		}

		.work-card-inner {
			background: var(--card-bg);
			border-radius: var(--radius-xl);
			overflow: hidden;
			transition: all 0.3s ease;
			border: 1px solid var(--border);
			height: 100%;
		}

		.work-card:hover .work-card-inner {
			transform: translateY(-8px) scale(1.02);
			box-shadow: var(--shadow-lg);
			border-color: var(--brand);
		}

		.work-visual {
			position: relative;
			height: 280px;
			overflow: hidden;
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			border-radius: var(--radius-xl) var(--radius-xl) 0 0;
		}

		.company-logo {
			position: absolute;
			top: 15%;
			left: 50%;
			transform: translateX(-50%);
			opacity: 0.4;
			z-index: 1;
		}

		.company-logo img {
			height: 120px;
			width: auto;
			filter: brightness(0) invert(1);
			object-fit: contain;
		}

		.project-icon {
			position: absolute;
			bottom: 15%;
			right: 15%;
			z-index: 2;
			font-size: 2rem;
			transition: all 0.3s ease;
			filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.3));
		}

		.work-card:hover .project-icon {
			transform: scale(1.05);
			filter: drop-shadow(0 6px 12px rgba(255, 255, 255, 0.2));
		}

		.work-overlay {
			position: absolute;
			inset: 0;
			background: rgba(0, 0, 0, 0.7);
			display: flex;
			align-items: center;
			justify-content: center;
			opacity: 0;
			transition: all 0.3s ease;
			border-radius: var(--radius-xl) var(--radius-xl) 0 0;
		}

		.work-card:hover .work-overlay {
			opacity: 1;
		}

		.work-card:hover .work-visual {
			filter: brightness(1.1);
		}

		.work-card:hover .company-logo {
			opacity: 0.6;
		}

		.view-case {
			color: var(--fg);
			font-weight: 600;
			padding: 0.75rem 1.5rem;
			border: 2px solid rgba(255, 255, 255, 0.8);
			background: rgba(255, 255, 255, 0.1);
			border-radius: 0.5rem;
			transition: all 0.3s ease;
			backdrop-filter: blur(10px);
		}

		.view-case:hover {
			background: rgba(255, 255, 255, 0.2);
			transform: translateY(-2px);
		}

		.work-content {
			padding: 2rem;
		}

		.work-title {
			font-size: 1.5rem;
			font-weight: 700;
			margin-bottom: 0.5rem;
		}

		.work-company {
			color: var(--brand);
			font-weight: 600;
			margin-bottom: 1rem;
		}

		.work-description {
			color: var(--muted);
			margin-bottom: 1.5rem;
		}

		.work-tags {
			display: flex;
			flex-wrap: wrap;
			gap: 0.5rem;
		}

		.work-tag {
			background: var(--bg);
			color: var(--muted);
			padding: 0.25rem 0.75rem;
			border-radius: 1rem;
			font-size: 0.875rem;
			border: 1px solid var(--border);
		}

		.work-more {
			text-align: center;
			color: var(--muted);
			font-style: italic;
		}

		/* Story Section */
		.story {
			padding: 8rem 0;
			background: var(--bg);
		}

		.story-quote {
			text-align: center;
			margin-bottom: 4rem;
		}

		.quote-text {
			font-size: clamp(2rem, 4vw, 3.5rem);
			font-weight: 300;
			letter-spacing: 0.1em;
			color: var(--muted);
			font-style: italic;
		}

		.story-content {
			display: grid;
			grid-template-columns: 1fr 1fr;
			gap: 4rem;
			max-width: 800px;
			margin: 0 auto;
		}

		.story-bio,
		.story-mission {
			font-size: 1.125rem;
			line-height: 1.8;
		}

		/* New Story Layout */
		.story-layout {
			display: grid;
			grid-template-columns: 65% 35%;
			grid-template-areas:
				"title title"
				"text photo";
			gap: 3rem 4rem;
			align-items: start;
			min-height: 600px;
		}

		.story-title {
			font-size: clamp(2.5rem, 5vw, 4rem);
			font-weight: 800;
			margin-bottom: 0;
			color: var(--fg);
			grid-area: title;
		}

		.story-text {
			grid-area: text;
			max-width: none;
		}

		.story-photo {
			grid-area: photo;
			align-self: center;
			position: relative;
		}

		/* Keep overflow visible for hover decorations */
		.story-photo {
			overflow: visible;
		}

		.story-paragraph {
			font-size: 1.4rem;
			font-weight: 400;
			line-height: 1.4;
			margin-bottom: 1.8rem;
			color: var(--fg);
			opacity: 1;
			letter-spacing: -0.01em;
		}

		.story-personal {
			font-size: 1.2rem;
			font-weight: 500;
			line-height: 1.4;
			color: var(--muted);
			font-style: italic;
			margin-top: 2rem;
			padding: 2rem;
			background: rgba(59, 130, 246, 0.15);
			border-left: 6px solid var(--brand);
			border-radius: 0 0.75rem 0.75rem 0;
		}

		/* Polaroid Photo */
		.story-photo {
			position: relative;
			justify-self: center;
		}

		.polaroid {
			background: #f8f9fa;
			padding: 1.5rem 1.5rem 4rem 1.5rem;
			border-radius: 0.75rem;
			box-shadow:
				0 25px 50px rgba(0, 0, 0, 0.4),
				0 12px 24px rgba(0, 0, 0, 0.3);
			transform: rotate(-3deg) translateY(-10px);
			transition: all 0.3s ease;
			position: relative;
			max-width: 550px;
			z-index: 2;
		}

		/* Single hover-only crayon streak decoration */
		.story-photo:hover::before {
			content: "üçï ‚òï ‚úàÔ∏è ‚≠ê üß°";
			position: absolute;
			font-size: 2.5rem;
			color: #ff8c42;
			top: -10%;
			right: -15%;
			pointer-events: none;
			animation: crayonFloat1 4s ease-in-out infinite;
			animation-delay: 0.3s;
			text-shadow: 3px 3px 12px rgba(255, 140, 66, 0.6);
			z-index: 15;
			opacity: 1;
		}

		/* New crayon streak animations */
		@keyframes crayonFloat1 {
			0%, 100% {
				transform: translateY(0) translateX(0) rotate(-5deg) scale(1);
				opacity: 0.8;
			}
			25% {
				transform: translateY(-8px) translateX(5px) rotate(-2deg) scale(1.1);
				opacity: 1;
			}
			50% {
				transform: translateY(-15px) translateX(-3px) rotate(-8deg) scale(1.05);
				opacity: 0.9;
			}
			75% {
				transform: translateY(-5px) translateX(8px) rotate(-3deg) scale(0.95);
				opacity: 0.95;
			}
		}



		@keyframes floatingDot {
			0% {
				transform: translate(-50%, 0) scale(0);
				opacity: 0;
			}
			10% {
				transform: translate(-50%, -10px) scale(1);
				opacity: 1;
			}
			90% {
				transform: translate(-50%, -40px) scale(0.5);
				opacity: 0.5;
			}
			100% {
				transform: translate(-50%, -50px) scale(0);
				opacity: 0;
			}
		}

		.polaroid:hover {
			transform: rotate(-1deg) translateY(-15px) scale(1.05);
			box-shadow:
				0 30px 60px rgba(0, 0, 0, 0.4),
				0 12px 24px rgba(0, 0, 0, 0.3);
		}



		.polaroid::before {
			content: "";
			position: absolute;
			top: 0.5rem;
			right: 0.5rem;
			width: 2rem;
			height: 1rem;
			background: linear-gradient(
					45deg,
					transparent 30%,
					rgba(255, 255, 255, 0.8) 30%,
					rgba(255, 255, 255, 0.8) 70%,
					transparent 70%
				),
				linear-gradient(
					-45deg,
					transparent 30%,
					rgba(255, 255, 255, 0.6) 30%,
					rgba(255, 255, 255, 0.6) 70%,
					transparent 70%
				);
			opacity: 0.7;
			border-radius: 0.2rem;
		}

		.polaroid-image {
			position: relative;
			border-radius: 0.25rem;
			overflow: hidden;
			background: #ddd;
			aspect-ratio: 4/3;
		}

		.couple-photo {
			width: 100%;
			height: 100%;
			object-fit: cover;
			transition: transform 0.3s ease;
		}

		.polaroid:hover .couple-photo {
			transform: scale(1.02);
		}

		.polaroid-caption {
			position: absolute;
			bottom: 0.75rem;
			left: 50%;
			transform: translateX(-50%);
			font-family: "Caveat", cursive;
			font-size: 1.2rem;
			color: #2d3748;
			font-weight: 600;
			text-shadow: 0 1px 2px rgba(255, 255, 255, 0.8);
		}

		/* YouTube Showcase Section */
		.youtube-showcase {
			padding: 8rem 0;
			background: linear-gradient(180deg, var(--bg) 0%, #1a202c 100%);
		}

		.youtube-grid {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
			gap: 3rem;
			margin-bottom: 2rem;
		}

		.youtube-card {
			position: relative;
			background: var(--card-bg);
			border-radius: var(--radius-xl);
			overflow: hidden;
			border: 1px solid var(--border);
			transition: all 0.3s ease;
			opacity: 0;
			transform: translateY(50px);
		}

		.youtube-card.animate {
			opacity: 1;
			transform: translateY(0);
		}

		.youtube-card:hover {
			transform: translateY(-8px) scale(1.02);
			box-shadow: var(--shadow-lg);
			border-color: var(--brand);
		}

		.youtube-embed {
			position: relative;
			padding-bottom: 56.25%; /* 16:9 aspect ratio */
			height: 0;
			overflow: hidden;
			background: var(--bg);
		}

		.youtube-embed iframe {
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			border: none;
		}

		.youtube-content {
			padding: 2rem;
			position: relative;
		}

		.youtube-title {
			font-size: 1.3rem;
			font-weight: 700;
			margin-bottom: 0.75rem;
			color: var(--fg);
		}

		.youtube-description {
			color: var(--muted);
			font-size: 0.95rem;
		}

		.youtube-overlay {
			position: absolute;
			top: 50%;
			right: 2rem;
			transform: translateY(-50%);
			opacity: 0;
			transition: opacity 0.3s ease;
		}

		.youtube-card:hover .youtube-overlay {
			opacity: 1;
		}

		.play-button {
			width: 60px;
			height: 60px;
			background: var(--brand);
			border-radius: 50%;
			display: flex;
			align-items: center;
			justify-content: center;
			color: var(--fg);
			font-size: 1.5rem;
			box-shadow: var(--shadow-md);
			animation: pulse 2s infinite;
		}

		@keyframes pulse {
			0%,
			100% {
				transform: scale(1);
			}
			50% {
				transform: scale(1.05);
			}
		}

		/* Slideshow Presentations Section */
		.slideshows {
			padding: 8rem 0;
			background: var(--bg);
		}

		.slideshow-gallery {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(350px, 450px));
			gap: 3rem;
			justify-content: center;
			margin-bottom: 3rem;
		}

		.slideshow-item {
			background: var(--card-bg);
			border-radius: var(--radius-xl);
			overflow: hidden;
			border: 1px solid var(--border);
			transition: all 0.3s ease;
			opacity: 0;
			transform: translateY(50px);
		}

		.slideshow-item.animate {
			opacity: 1;
			transform: translateY(0);
		}

		.slideshow-item:hover {
			transform: translateY(-8px) scale(1.02);
			box-shadow: var(--shadow-lg);
			border-color: var(--accent);
		}

		.slideshow-preview {
			position: relative;
			height: 250px;
			overflow: hidden;
		}

		.slideshow-thumbnail {
			width: 100%;
			height: 100%;
			object-fit: cover;
			transition: transform 0.3s ease;
		}

		.slideshow-placeholder {
			width: 100%;
			height: 100%;
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			background: linear-gradient(135deg, var(--brand), var(--accent));
			color: var(--fg);
		}

		.slideshow-placeholder i {
			font-size: 4rem;
			margin-bottom: 1rem;
			opacity: 0.8;
		}

		.slideshow-placeholder span {
			font-size: 1.1rem;
			font-weight: 600;
		}

		.slideshow-overlay {
			position: absolute;
			inset: 0;
			background: rgba(0, 0, 0, 0.8);
			display: flex;
			align-items: center;
			justify-content: center;
			opacity: 0;
			transition: opacity 0.3s ease;
		}

		.slideshow-item:hover .slideshow-overlay {
			opacity: 1;
		}

		.slideshow-item:hover .slideshow-thumbnail {
			transform: scale(1.1);
		}

		.slideshow-view-btn {
			display: flex;
			align-items: center;
			gap: 0.75rem;
			padding: 1rem 2rem;
			background: var(--accent);
			color: var(--fg);
			text-decoration: none;
			border-radius: 0.75rem;
			font-weight: 700;
			font-size: 1rem;
			transition: all 0.3s ease;
			border: 2px solid transparent;
		}

		.slideshow-view-btn:hover {
			background: var(--brand);
			transform: translateY(-3px);
			box-shadow: 0 10px 25px rgba(59, 130, 246, 0.3);
			border-color: rgba(255, 255, 255, 0.2);
		}

		.slideshow-info {
			padding: 2rem;
		}

		.slideshow-title {
			font-size: 1.4rem;
			font-weight: 700;
			margin-bottom: 0.75rem;
			color: var(--fg);
		}

		.slideshow-description {
			color: var(--muted);
			font-size: 0.95rem;
			line-height: 1.6;
		}

		.slideshow-more {
			text-align: center;
			color: var(--muted);
			font-style: italic;
			font-size: 1rem;
		}

		/* Contact Section */
		.contact {
			padding: 8rem 0 2rem;
			background: var(--bg);
		}

		.contact-content {
			text-align: center;
		}

		.contact-email {
			margin-bottom: 3rem;
		}

		.email-link {
			display: block;
			font-size: clamp(2rem, 4vw, 3rem);
			font-weight: 700;
			color: var(--fg);
			text-decoration: none;
			margin-bottom: 0.5rem;
			transition: color 0.3s ease;
		}

		.email-link:hover {
			color: var(--brand);
		}

		.contact-social {
			display: flex;
			justify-content: center;
			gap: 2rem;
		}

		.social-link {
			width: 60px;
			height: 60px;
			background: var(--card-bg);
			border: 1px solid var(--border);
			border-radius: 50%;
			display: flex;
			align-items: center;
			justify-content: center;
			color: var(--muted);
			text-decoration: none;
			font-size: 1.5rem;
			transition: all 0.3s ease;
		}

		.social-link:hover {
			background: var(--brand);
			color: var(--fg);
			transform: translateY(-5px);
			box-shadow: var(--shadow-md);
		}

		/* Big Connect Button */
		.big-connect-button-wrapper {
			margin-top: 2rem;
			margin-bottom: 4rem;
			display: flex;
			justify-content: center;
		}

		.big-button {
			position: relative;
			display: inline-block;
		}

		.big-cta {
			background: linear-gradient(
				145deg,
				var(--brand),
				#2563eb
			) !important;
			color: var(--fg) !important;
			padding: 1.5rem 3rem !important;
			border-radius: 1.5rem !important;
			text-decoration: none !important;
			font-weight: 800 !important;
			font-size: 1.5rem !important;
			position: relative !important;
			border: none !important;
			cursor: pointer !important;
			transform: translateY(0) !important;
			display: inline-flex !important;
			align-items: center !important;
			gap: 1rem !important;
			box-shadow:
				0 12px 25px rgba(59, 130, 246, 0.4),
				0 0 0 2px rgba(255, 255, 255, 0.1) inset,
				0 4px 8px rgba(255, 255, 255, 0.2) inset !important;
			transition: all 0.15s cubic-bezier(0.4, 0, 0.2, 1) !important;
			overflow: hidden !important;
		}

		.big-cta::before {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background: linear-gradient(
				145deg,
				rgba(255, 255, 255, 0.15),
				transparent
			);
			border-radius: 1.5rem;
			opacity: 0;
			transition: opacity 0.3s ease;
		}

		.big-cta::after {
			content: "";
			position: absolute;
			top: 50%;
			left: 50%;
			width: 0;
			height: 0;
			background: radial-gradient(
				circle,
				rgba(255, 255, 255, 0.4) 0%,
				transparent 70%
			);
			border-radius: 50%;
			transform: translate(-50%, -50%);
			transition: all 0.6s ease;
		}

		.big-cta:hover {
			transform: translateY(-6px) !important;
			box-shadow:
				0 20px 40px rgba(59, 130, 246, 0.5),
				0 0 0 3px rgba(255, 255, 255, 0.2) inset,
				0 6px 12px rgba(255, 255, 255, 0.3) inset !important;
			background: linear-gradient(
				145deg,
				var(--accent),
				#0ea5e9
			) !important;
		}

		.big-cta:hover::before {
			opacity: 1 !important;
		}

		.big-cta:hover::after {
			width: 150px !important;
			height: 150px !important;
		}

		.big-cta:active {
			transform: translateY(-2px) !important;
			box-shadow:
				0 8px 16px rgba(59, 130, 246, 0.4),
				0 0 0 2px rgba(255, 255, 255, 0.1) inset,
				0 2px 6px rgba(0, 0, 0, 0.3) inset !important;
			background: linear-gradient(
				145deg,
				#1d4ed8,
				var(--brand)
			) !important;
		}

		.button-text {
			position: relative;
			z-index: 2;
		}

		.button-icon {
			font-size: 1.8rem;
			position: relative;
			z-index: 2;
			transition: transform 0.3s ease;
		}

		.big-cta:hover .button-icon {
			transform: scale(1.2) rotate(15deg);
		}

		/* Big button pulse ring */
		.big-button::before {
			content: "";
			position: absolute;
			top: 50%;
			left: 50%;
			width: 100%;
			height: 100%;
			border: 3px solid var(--brand);
			border-radius: 1.5rem;
			opacity: 0;
			transform: translate(-50%, -50%) scale(1);
			transition: all 0.3s ease;
			pointer-events: none;
		}

		.big-button:hover::before {
			opacity: 0.4;
			transform: translate(-50%, -50%) scale(1.15);
			animation: bigPulseRing 2s ease-out infinite;
		}

		@keyframes bigPulseRing {
			0% {
				transform: translate(-50%, -50%) scale(1.15);
				opacity: 0.4;
			}
			50% {
				transform: translate(-50%, -50%) scale(1.3);
				opacity: 0.1;
			}
			100% {
				transform: translate(-50%, -50%) scale(1.15);
				opacity: 0.4;
			}
		}

		/* Responsive */
		@media (max-width: 768px) {
			.header-container {
				padding: 1rem;
			}

			.nav {
				display: none;
			}

			.hero-title {
				/* Bigger headline on mobile for more impact */
				font-size: clamp(3rem, 12vw, 4.5rem);
				align-items: center;
			}

			.hero-profile {
				position: static;
				display: flex;
				justify-content: center;
				margin-bottom: 2rem;
				/* Keep only fade-in on mobile */
				animation: fadeIn 0.8s ease 0.2s forwards;
			}

			.hero-subline {
				/* Slightly larger subline for balance */
				font-size: 1.2rem;
			}

			.profile-flip-container {
				/* Larger image on mobile to pop */
				width: 240px;
				height: 240px;
				animation: none;
			}

			/* Center hero content for a clean stacked layout */
			.hero-content {
				text-align: center;
			}

			/* Hide decorative floating shapes on mobile to reduce visual noise */
			.floating-shapes {
				display: none;
			}

			.initials {
				font-size: 1.6rem;
			}

			.work-grid {
				grid-template-columns: 1fr;
				gap: 1.5rem;
			}

			.story-content {
				grid-template-columns: 1fr;
				gap: 2rem;
			}

			.story-layout {
				grid-template-columns: 1fr;
				grid-template-areas:
					"title"
					"photo"
					"text";
				gap: 3rem;
				text-align: center;
			}

			.story-text {
				text-align: left;
			}

			.polaroid {
				max-width: 350px;
				transform: rotate(-2deg) translateY(-5px);
				padding: 1.2rem 1.2rem 3.5rem 1.2rem;
			}

			.youtube-grid {
				grid-template-columns: 1fr;
				gap: 2rem;
			}

			.slideshow-gallery {
				grid-template-columns: 1fr;
				gap: 2rem;
			}

			.contact-social {
				gap: 1rem;
			}

			.big-cta {
				font-size: 1.2rem;
				padding: 1.2rem 2rem;
			}

			.button-icon {
				font-size: 1.5rem;
			}

			.cta-button {
				font-size: 0.7rem;
			}
		}

		/* Scroll animations */
		@media (prefers-reduced-motion: no-preference) {
			.work-card,
			.process-step {
				opacity: 0;
				transform: translateY(50px);
			}

			.work-card.animate,
			.process-step.animate {
				opacity: 1;
				transform: translateY(0);
				transition: all 0.8s ease;
			}
		}
	</style>

	<script>
		window.addEventListener("scroll", () => {
			const scrolled = window.scrollY;
			document.querySelectorAll(".hero-line").forEach((el, i) => {
				const speed = 0.1 + i * 0.05; // each line moves at a slightly diff rate
				el.style.transform = `translateY(${scrolled * speed}px)`;
			});
		});

		// Intersection Observer for scroll animations
		const observerOptions = {
			threshold: 0.1,
			rootMargin: "0px 0px -50px 0px",
		};

		const observer = new IntersectionObserver((entries) => {
			entries.forEach((entry) => {
				if (entry.isIntersecting) {
					entry.target.classList.add("animate");
				}
			});
		}, observerOptions);

		// Observe work cards, YouTube cards, and slideshow items
		document
			.querySelectorAll(".work-card, .youtube-card, .slideshow-item")
			.forEach((el) => {
				observer.observe(el);
			});

		// Smooth scroll for navigation links
		document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
			anchor.addEventListener("click", function (e) {
				e.preventDefault();
				const target = document.querySelector(
					this.getAttribute("href"),
				);
				if (target) {
					target.scrollIntoView({
						behavior: "smooth",
						block: "start",
					});
				}
			});
		});

		// Header background on scroll
		window.addEventListener("scroll", () => {
			const header = document.querySelector(".header");
			if (window.scrollY > 100) {
				header.style.background = "rgba(11, 18, 32, 0.95)";
			} else {
				header.style.background = "rgba(11, 18, 32, 0.8)";
			}
		});

		// 3D Button Effects
		function createSparkle(container, x, y) {
			const sparkle = document.createElement("div");
			sparkle.className = "sparkle";
			sparkle.style.left = x + "px";
			sparkle.style.top = y + "px";
			container.appendChild(sparkle);

			// Trigger animation
			setTimeout(() => sparkle.classList.add("animate"), 10);

			// Remove after animation
			setTimeout(() => {
				if (sparkle.parentNode) {
					sparkle.parentNode.removeChild(sparkle);
				}
			}, 1500);
		}

		// Enhanced CTA button functionality
		document.addEventListener("DOMContentLoaded", () => {
			const ctaButtons = document.querySelectorAll(".cta-button");

			ctaButtons.forEach((button) => {
				const container = button.parentElement;
				let sparkleInterval;

				// Hover sparkle effect
				button.addEventListener("mouseenter", () => {
					sparkleInterval = setInterval(() => {
						const rect = container.getBoundingClientRect();
						const x = Math.random() * rect.width;
						const y = Math.random() * rect.height;
						createSparkle(container, x, y);
					}, 200);
				});

				button.addEventListener("mouseleave", () => {
					clearInterval(sparkleInterval);
				});

				// Click effect with haptic feedback
				button.addEventListener("click", (e) => {
					// Haptic feedback for mobile devices
					if ("vibrate" in navigator) {
						navigator.vibrate([50, 30, 50]); // Short buzz pattern
					}

					// Create click sparkle burst
					const rect = container.getBoundingClientRect();
					const centerX = rect.width / 2;
					const centerY = rect.height / 2;

					// Create multiple sparkles in a burst
					for (let i = 0; i < 6; i++) {
						setTimeout(() => {
							const angle = i * 60 * (Math.PI / 180);
							const distance = 30 + Math.random() * 20;
							const x = centerX + Math.cos(angle) * distance;
							const y = centerY + Math.sin(angle) * distance;
							createSparkle(container, x, y);
						}, i * 50);
					}

					// Add press effect class temporarily
					button.classList.add("pressed");
					setTimeout(() => button.classList.remove("pressed"), 150);
				});

				// Touch events for mobile
				button.addEventListener("touchstart", (e) => {
					if ("vibrate" in navigator) {
						navigator.vibrate(25); // Light haptic on touch
					}
				});
			});
		});
	</script>
</html>
